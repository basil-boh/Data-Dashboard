{"ast":null,"code":"var _jsxFileName = \"/Users/basil/Data-Dashboard/src/components/FilterPanel.js\";\nimport React from 'react';\nimport { Card, Form, Button } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FilterPanel = ({\n  columns,\n  onFilterChange,\n  filters\n}) => {\n  const handleFilterChange = (column, value) => {\n    onFilterChange(column, value);\n  };\n  const clearFilters = () => {\n    columns.forEach(column => {\n      onFilterChange(column, '');\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: \"filter-container mb-4\",\n    children: /*#__PURE__*/_jsxDEV(Card.Body, {\n      children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n        children: \"Filters\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this), columns.map(column => /*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: column\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          placeholder: `Filter by ${column}`,\n          value: filters[column] || '',\n          onChange: e => handleFilterChange(column, e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 13\n        }, this)]\n      }, column, true, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"outline-secondary\",\n        size: \"sm\",\n        onClick: clearFilters,\n        children: \"Clear All Filters\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n};\n_c = FilterPanel;\nexport default FilterPanel;\nvar _c;\n$RefreshReg$(_c, \"FilterPanel\");","map":{"version":3,"names":["React","Card","Form","Button","jsxDEV","_jsxDEV","FilterPanel","columns","onFilterChange","filters","handleFilterChange","column","value","clearFilters","forEach","className","children","Body","Title","fileName","_jsxFileName","lineNumber","columnNumber","map","Group","Label","Control","type","placeholder","onChange","e","target","variant","size","onClick","_c","$RefreshReg$"],"sources":["/Users/basil/Data-Dashboard/src/components/FilterPanel.js"],"sourcesContent":["import React from 'react';\nimport { Card, Form, Button } from 'react-bootstrap';\n\nconst FilterPanel = ({ columns, onFilterChange, filters }) => {\n  const handleFilterChange = (column, value) => {\n    onFilterChange(column, value);\n  };\n\n  const clearFilters = () => {\n    columns.forEach(column => {\n      onFilterChange(column, '');\n    });\n  };\n\n  return (\n    <Card className=\"filter-container mb-4\">\n      <Card.Body>\n        <Card.Title>Filters</Card.Title>\n        {columns.map(column => (\n          <Form.Group key={column} className=\"mb-3\">\n            <Form.Label>{column}</Form.Label>\n            <Form.Control\n              type=\"text\"\n              placeholder={`Filter by ${column}`}\n              value={filters[column] || ''}\n              onChange={(e) => handleFilterChange(column, e.target.value)}\n            />\n          </Form.Group>\n        ))}\n        <Button \n          variant=\"outline-secondary\" \n          size=\"sm\"\n          onClick={clearFilters}\n        >\n          Clear All Filters\n        </Button>\n      </Card.Body>\n    </Card>\n  );\n};\n\nexport default FilterPanel;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,IAAI,EAAEC,IAAI,EAAEC,MAAM,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErD,MAAMC,WAAW,GAAGA,CAAC;EAAEC,OAAO;EAAEC,cAAc;EAAEC;AAAQ,CAAC,KAAK;EAC5D,MAAMC,kBAAkB,GAAGA,CAACC,MAAM,EAAEC,KAAK,KAAK;IAC5CJ,cAAc,CAACG,MAAM,EAAEC,KAAK,CAAC;EAC/B,CAAC;EAED,MAAMC,YAAY,GAAGA,CAAA,KAAM;IACzBN,OAAO,CAACO,OAAO,CAACH,MAAM,IAAI;MACxBH,cAAc,CAACG,MAAM,EAAE,EAAE,CAAC;IAC5B,CAAC,CAAC;EACJ,CAAC;EAED,oBACEN,OAAA,CAACJ,IAAI;IAACc,SAAS,EAAC,uBAAuB;IAAAC,QAAA,eACrCX,OAAA,CAACJ,IAAI,CAACgB,IAAI;MAAAD,QAAA,gBACRX,OAAA,CAACJ,IAAI,CAACiB,KAAK;QAAAF,QAAA,EAAC;MAAO;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAY,CAAC,EAC/Bf,OAAO,CAACgB,GAAG,CAACZ,MAAM,iBACjBN,OAAA,CAACH,IAAI,CAACsB,KAAK;QAAcT,SAAS,EAAC,MAAM;QAAAC,QAAA,gBACvCX,OAAA,CAACH,IAAI,CAACuB,KAAK;UAAAT,QAAA,EAAEL;QAAM;UAAAQ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAa,CAAC,eACjCjB,OAAA,CAACH,IAAI,CAACwB,OAAO;UACXC,IAAI,EAAC,MAAM;UACXC,WAAW,EAAE,aAAajB,MAAM,EAAG;UACnCC,KAAK,EAAEH,OAAO,CAACE,MAAM,CAAC,IAAI,EAAG;UAC7BkB,QAAQ,EAAGC,CAAC,IAAKpB,kBAAkB,CAACC,MAAM,EAAEmB,CAAC,CAACC,MAAM,CAACnB,KAAK;QAAE;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC7D,CAAC;MAAA,GAPaX,MAAM;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAQX,CACb,CAAC,eACFjB,OAAA,CAACF,MAAM;QACL6B,OAAO,EAAC,mBAAmB;QAC3BC,IAAI,EAAC,IAAI;QACTC,OAAO,EAAErB,YAAa;QAAAG,QAAA,EACvB;MAED;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACR,CAAC;AAEX,CAAC;AAACa,EAAA,GApCI7B,WAAW;AAsCjB,eAAeA,WAAW;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}